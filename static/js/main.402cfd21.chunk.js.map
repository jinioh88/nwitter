{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","appId","REACT_APP_ID","firebase","initializeApp","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","error","setError","newAccount","setNewAccount","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","console","log","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","to","AppRounter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.402cfd21.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () => {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    const onChange = (event) => {\r\n        const { target: { name, value }, } = event;\r\n        if (name === 'email') {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} />\r\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" value={password} onChange={onChange} required />\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                {error}\r\n            </form>\r\n            <span onClick={toggleAccount}>\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from 'components/AuthForm';\r\n\r\nconst Auth = () => {\r\n\r\n\r\n    const onSocialClick = async (event) => {\r\n        const { target: { name }, } = event;\r\n        let provider;\r\n        if (name === 'google') {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === 'github') {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n\r\n        await authService.signInWithPopup(provider);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AuthForm />\r\n            <div>\r\n                <button onClick={onSocialClick} name = \"google\">Continure with Google</button>\r\n                <button onClick={onSocialClick} name=\"github\">Continure with Github</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import { dbService, storageService } from 'fbase';\r\nimport { useState } from 'react';\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm('삭제하시겠습니까?');\r\n        \r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n\r\n            console.log(nweetObj);\r\n            if (nweetObj.attachmentUrl !== '') {\r\n                console.log('삭제')\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onChange = (event) => {\r\n        const { target: {value}, } = event;\r\n        setNewNweet(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n     \r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n        setEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            { editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit}>\r\n                        <input onChange={onChange} value={newNweet} required />\r\n                        <input type='submit' value='Update Nweet' />\r\n                    </form>\r\n                    <button onClick={toggleEditing}>Cancel</button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {\r\n                        nweetObj.attachmentUrl && (\r\n                            <img src={nweetObj.attachmentUrl} width='50px' height='50px' />\r\n                        )\r\n                    }\r\n                    {\r\n                        isOwner && (\r\n                            <>\r\n                                <button onClick={onDeleteClick}>Delete Nweet</button>\r\n                                <button onClick={toggleEditing}>Edit Nweet</button>\r\n                            </>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import { useState } from 'react';\r\nimport { storageService, dbService } from 'fbase';\r\nimport { v4 as uuidv4} from 'uuid';\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n\r\n    const [nweet, setNweet] = useState('');\r\n    const [attachment, setAttachment] = useState('');\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        let attachmentUrl = '';\r\n        if (attachment !== '') {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, 'data_url');\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n\r\n        await dbService.collection('nweets').add({\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        });\r\n        setNweet('');\r\n        setAttachment('');\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const { target: { value }, } = event;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const { target: { files }, } = event;\r\n        const theFile = files[0];\r\n\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const { currentTarget: { result }, } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment('');\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input value={nweet} onChange={onChange} type='text' placeholder=\"What's on your mind?\" maxLength={120} />\r\n                <input type='file' accept='image/*' onChange={onFileChange} />\r\n                <input type='submit' value='Nweet' />\r\n                { attachment && (\r\n                        <div>\r\n                            <img src={attachment} width=\"50px\" height=\"50px\" />\r\n                            <button onClick={onClearAttachment}>Clear</button>\r\n                        </div>\r\n                    ) \r\n                }\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import { useState, useEffect } from 'react';\r\nimport { dbService } from 'fbase';\r\nimport Nweet from 'components/Nweet';\r\nimport NweetFactory from 'components/NweetFactory';\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection('nweets').onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((document) => ({\r\n                id: document.id,\r\n                ...document.data(),\r\n            }));\r\n            setNweets(newArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <NweetFactory userObj={userObj} />\r\n            <div>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","import { authService, dbService } from 'fbase';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push('/');\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const { target: { value }, } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({ displayName: newDisplayName });\r\n            refreshUser();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input type='text' value={newDisplayName} onChange={onChange} placeholder='Display name' />\r\n                <input type='submit' value='Update Profile' />\r\n            </form>\r\n            <button onClick={onLogOutClick}>Log Out</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;","import { Link } from 'react-router-dom';\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from 'routes/Profile';\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRounter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    return (\r\n        <Router>\r\n            { isLoggedIn && <Navigation userObj={userObj} /> }\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />    \r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile refreshUser={refreshUser} userObj={userObj} />\r\n                        </Route>\r\n                    </>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRounter;","import { useEffect, useState } from 'react';\r\nimport AppRouter from \"components/Router\";\r\nimport { authService } from 'fbase';\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUserObj({\r\n          uid: user.uid,\r\n          displayName: user.displayName,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(false);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      uid: user.uid,\r\n      displayName: user.displayName,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      { init ? ( <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> ) : \r\n              ( \"initializing...\" ) } \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}